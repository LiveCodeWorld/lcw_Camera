[{"created":"2025-01-25T20:54:29.305Z","text":"{{$:/plugins/nico/projectify/ui/dashboard/Dashboard}}","title":"About","modified":"2025-01-25T20:54:30.840Z"},{"created":"2025-02-09T23:19:46.639Z","modified":"2025-02-09T23:27:50.436Z","title":"AtemControl","tags":["FishPi Studio","todo"],"due":"","priority":""},{"created":"2025-01-27T21:25:06.229Z","text":"We require the [[Camera Module]] to  make it easy to add a live video to be displayed on any control - not simply the view. Therefore we require the following:\n\n- [[lib_Camera]] as well as\n- [[Camera Module]]\n\nThe main syntax we use to create, and destroy live video is:\n\n```\nset the camera_Open of sControl to \"FaceTime\"\n```\n","tags":["Inbox","todo","Milestone"],"modified":"2025-02-09T23:28:58.352Z","title":"Camera Specification","due":"20250210235959999","type":"text/markdown"},{"created":"2025-02-09T23:19:17.414Z","modified":"2025-02-09T23:27:53.078Z","title":"CameraSwitching","tags":["FishPi Studio","todo"],"due":"","priority":""},{"created":"2025-02-09T23:27:42.150Z","description":"","category":"","tags":["Project"],"modified":"2025-02-09T23:27:42.150Z","title":"FishPi Studio"},{"created":"2025-03-11T17:23:15.403Z","text":"On this [[page|Page]] are some Tools for the [[Project Hitchhikers]] Guide.\n\n# Menus\nThese menus will be installed by the GuideApp on GuideLoad:\n\n- [[Tiddlywiki Tiddler Menu]]\n\n# Libraries\nThese libraries will be loaded and used by the GuideApp on GuideLoad:\n\n# Actions\nClick this radiobutton to install or remove the tools listed on this page:\n\n<$button type=\"button\" class=\"btn btn-warning btn-sm\">Install Guide Tools <$callLivecode message=\"InstallGuideTools\"/></$button>\n<$button type=\"button\" class=\"btn btn-danger btn-sm\">Remove Guide Tools <$callLivecode message=\"RemoveGuideTools\"/></$button>\n<$button type=\"button\" class=\"btn btn-info btn-sm\">Edit lib_TiddlyMessage <$callLivecode message=\"EditScript stack 'lib_TiddlyMessage'\"/></$button>\n\n# Other Menus\n\n- [[Tiddlywiki Menu]]\n- [[Tiddlywiki Plugins Menu]]\n","title":"Guide Tools","type":"text/markdown","modified":"2025-03-11T23:49:09.479Z"},{"created":"2025-02-09T23:28:36.752Z","description":"","category":"","tags":["Project"],"modified":"2025-02-09T23:28:36.752Z","title":"Laptop Studio"},{"created":"2025-01-21T22:09:20.882Z","text":"A LiveButton is a [[TiddlyButton]] that uses javascript to call Livecode. The `<$hello>` test-action widget is registered:\n\n<$hello/>\n\nTiddlyWiki does not directly support inline JavaScript execution via widgets. Instead, JavaScript must either be embedded in a custom plugin (or maybe executed via an appropriate API like tm-sendmessage???).\n\n! Best Practice\nThe [[$:/plugins/custom/ExecuteJavaScript]] macro exports `exports.callLivecode = CallLivecodeWidget;`, which can be called in a button with `<$callLivecode>`. As you can see by the javascript this (currntly) simply calls the [[tiddlyButton_Call]] function in LiveCode. The idea I believe was to obtain a result in javascript - which as i remember is not going to work (yet). Here are some `callLivecode` button examples:\n\n```\n<$button>\n  $callLivecode\n  <$callLivecode/>\n</$button>\n```\n\n<$button>\n  $callLivecode\n  <$callLivecode/>\n</$button>\n\n<$button>\n  Send \"Hello\" with $callLivecode\n  <$callLivecode message=\"Hello\"/>\n</$button>\n\n<$vars dynamicMessage=\"This is a Dynamic Message from TW\">\n  <$button>\n    Send Dynamic Message with $callLivecode\n    <$callLivecode message=<<dynamicMessage>>/>\n  </$button>\n</$vars>\n\n! Live Actions\nHere are some examples of LiveButtons that interact with Livecode. These ones have been styled using the ShirazPlugin.\n\n<$button type=\"button\" class=\"btn btn-info btn-sm\">\n  EditScript of stack 'lib_TiddlyMessage'\n  <$callLivecode message=\"EditScript stack 'lib_TiddlyMessage'\"/>\n</$button>\n\n<$link overrideClass=\"btn btn-warning\" to=\"Warning\">Link to Warning</$link>\n\n<$button type=\"button\" class=\"btn btn-danger btn-sm\">\n  HkeyEdit 'C tiddlyButton_Call'\n  <$callLivecode message=\"HkeyEdit 'C tiddlyButton_Call'\"/>\n</$button>\n\n! See also\nSome experiments regarding asynchrounous interacctions between LiveCode and TiddlyWiki:\n\n* [[Experimental Messaging]]\n\nThe result of these tests are displayed in the [[Test]] tiddler, and sometimes logged in the [[test-log]] tiddler.\n\n```\n<$button>\n  $wikiscript with Hello\n  <$wikiscript message=\"Hello\"/>\n</$button>\n```\n\nSee also work in progress using transclusion for multiline text only messages:\n\n* [[Multiline LiveButton Messages]]","title":"LiveButton","modified":"2025-03-11T16:22:13.734Z"},{"created":"2025-02-09T23:20:11.909Z","modified":"2025-02-09T23:27:55.689Z","title":"NdiSwitching","tags":["FishPi Studio","todo"],"due":"","priority":""},{"created":"2025-02-09T23:26:54.340Z","modified":"2025-02-09T23:27:58.049Z","title":"ObsControl","tags":["FishPi Studio","todo"],"due":"","priority":""},{"created":"2025-01-27T21:24:24.684Z","text":"<<timeline-vertical filter:\"[tag[Milestone]]\" date:\"due\" dateformat:\"mmm DDth\">>","title":"Roadmap","modified":"2025-01-27T21:24:27.545Z"},{"created":"2025-01-27T21:27:01.509Z","text":"TiddlyCamera enables a live camera feed to be displayed ontop of a TiddlyBrowser.","tags":["Laptop Studio","Milestone","todo"],"modified":"2025-02-09T23:28:45.242Z","title":"TiddlyCamera","due":"20250210235959999"},{"created":"2025-01-27T21:27:39.027Z","text":"We can now record both the TiddlyCamera, and teh entire screen directly into a wiki folder.","tags":["Laptop Studio","Milestone","todo"],"modified":"2025-02-09T23:28:48.709Z","title":"TiddlyRecording","due":"20250210235959999"},{"created":"2025-01-25T20:54:54.134Z","text":"<<interstitial>>\n\n@@.interstitial\n* ''23:09'' The camera should be basic. As should the recording and as cinema. Let's get that done.\n@@","title":"Working on","modified":"2025-02-09T23:09:50.702Z"}]